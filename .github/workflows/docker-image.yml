name: Docker Image CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
jobs:

  build:

   runs-on: ubuntu-latest

   steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      -       
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -     
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache-from: type=local,src=/tmp/.buildx-cache
      - run: npm install
      - run: npm run build
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -    
        name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.6.2
        with:
          # list of Docker images to use as base name for tags
          images: ${{ inputs.image-names }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,
            type=semver,pattern={{version}}
            enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr,prefix=pr
 
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./ 
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          image_name: astranavt/bull-board-fastify-docker
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
